//
//  PSYScrollButtons.m
//  自定义宫格排版按钮
//
//  Created by hd-app02 on 16/11/10.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "PSYScrollButtons.h"
#import "PSYButton.h"

#define VIEW_H self.bounds.size.height
#define VIEW_W self.bounds.size.width

@interface PSYScrollButtons()<UIScrollViewDelegate>{

    NSInteger count;
    
    UIPageControl * pageControl;
    
    UIScrollView * scrollview ;

}

@property (nonatomic, strong) NSArray * imageArray;

@property (nonatomic, strong) NSArray * titleArray;

@property (nonatomic, assign) CGFloat BWidth;

@property (nonatomic, assign) CGFloat BHeight;

@property (nonatomic, assign) NSInteger Lines;//列

@property (nonatomic, assign) NSInteger margin;

@end

@implementation PSYScrollButtons

- (instancetype)initWithFrame:(CGRect)frame{

    if (self = [super initWithFrame:frame]) {
        
        _Lines = 4;
        
        _margin = 30;
        
        self.backgroundColor = COLOR(yellowColor);
        
        count = _titleArray.count;
        
        _BWidth = (VIEW_W - (_Lines + 1) * _margin)/_Lines;
        
        _BHeight = (VIEW_H - 3 * _margin)/2;;
        
        [self creatButtons];
        
    }
    return self;

}

- (instancetype)initWithCoder:(NSCoder *)aDecoder{
    
    if (self = [super initWithCoder:aDecoder]) {
        
        _Lines = 4;
        
        _margin = 10;
        
        _titleArray = @[@"资讯",@"自选股",@"全球指数",@"直播",@"投资组合",@"锦囊",@"策略",@"分析师",@"占位按钮"];
        
        UIGraphicsBeginImageContextWithOptions(CGSizeMake(36, 36), NO, 0.0);
        UIImage *blank = UIGraphicsGetImageFromCurrentImageContext();
        UIGraphicsEndImageContext();
        
        _imageArray = @[imageNamed(@"1image"),imageNamed(@"2image"),imageNamed(@"3image"),imageNamed(@"4image"),imageNamed(@"5image"),imageNamed(@"6image"),imageNamed(@"7image"),imageNamed(@"8image"),blank];
        
        count = _titleArray.count;
        
        //self.backgroundColor = color(yellowColor);
        
        _BWidth = (VIEW_W - (_Lines + 1) * _margin)/_Lines;
        
        _BHeight = (VIEW_H - 3 * _margin)/2;;
        
        [self creatButtons];
        
    }
    return self;

}


- (void)creatButtons{

    scrollview = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 0, self.bounds.size.width, VIEW_H)];
    
    scrollview.pagingEnabled = YES;
    
    scrollview.showsHorizontalScrollIndicator = NO;
    
    scrollview.delegate = self;
    
    pageControl = [[UIPageControl alloc]init];
    
    pageControl.center = CGPointMake(self.center.x, self.bounds.size.height - 5);
    
    pageControl.pageIndicatorTintColor = [UIColor grayColor];
    
    if (count <= 8) {
        
        for (int i = 0; i < count; i ++) {
        
            CGFloat HMargin = (VIEW_W - _BWidth * _Lines)/(_Lines + 1);
            
            PSYButton * button = [[PSYButton alloc]initWithFrame:CGRectMake((i % _Lines ) * (HMargin + _BWidth) + HMargin, (i / _Lines) * (_BHeight + _margin) + _margin, _BWidth, _BHeight)];
    
            [self setButtonProperty:button andTag:i + 1];
            
            [self addSubview:button];
            
        }
        
    }else if (count > 8 && count <= 16){
        
        for (int i = 0; i < 8; i ++) {
            
            CGFloat HMargin = (VIEW_W - _BWidth * _Lines)/(_Lines + 1);
            
            PSYButton * button = [[PSYButton alloc]initWithFrame:CGRectMake((i % _Lines ) * (HMargin + _BWidth) + HMargin, (i / _Lines) * (_BHeight + _margin) + _margin, _BWidth, _BHeight)];
    
           [self setButtonProperty:button andTag:i + 1];
            
            [scrollview addSubview:button];
            
        }
        
        for (int i = 8; i < count; i ++) {
            
            int j = i - 8;
            
            CGFloat HMargin = (VIEW_W - _BWidth * _Lines)/(_Lines + 1);
            
            PSYButton * button = [[PSYButton alloc]initWithFrame:CGRectMake((j % _Lines ) * (HMargin + _BWidth) + HMargin + VIEW_W, (j / _Lines) * (_BHeight + _margin) + _margin, _BWidth, _BHeight)];
            
            [self setButtonProperty:button andTag:i + 1];
            
            [scrollview addSubview:button];
        }
        
        pageControl.numberOfPages = 2;
        pageControl.currentPage = 0;
        
        [self addSubview:scrollview];
        
        //[self addSubview:pageControl];
        
        scrollview.contentSize = CGSizeMake(self.bounds.size.width * 2, VIEW_H);
    }

}

- (void)setButtonProperty:(UIButton *)button andTag:(int)tag{
    
    [button setTitle:[_titleArray objectAtIndex:(tag - 1)] forState:UIControlStateNormal];
    [button setImage:[_imageArray objectAtIndex:(tag - 1)] forState:UIControlStateNormal];
    [button setImage:[_imageArray objectAtIndex:(tag - 1)] forState:UIControlStateHighlighted];
    [button setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];

    //button.backgroundColor = [UIColor redColor];
    button.titleLabel.font = [UIFont systemFontOfSize:15];
    button.titleLabel.textAlignment = NSTextAlignmentCenter;
    
    [button setAdjustsImageWhenDisabled:NO];
    button.tag = tag;
    [button addTarget:self action:@selector(buttonOnTouch:) forControlEvents:UIControlEventTouchUpInside];
    
}

- (void)buttonOnTouch:(UIButton *)button{

    NSLog(@"点击%lu",(long)button.tag);

}

-(void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView{

    CGPoint offset = scrollView.contentOffset;
    CGRect bounds = scrollView.frame;
    
    [pageControl setCurrentPage:offset.x / bounds.size.width];
    
}

@end
