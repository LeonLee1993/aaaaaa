//
//  HDHomePageViewController.m
//  HDStock
//
//  Created by hd-app02 on 16/11/9.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "HDHomePageViewController.h"

@interface HDHomePageViewController ()<UITableViewDataSource,UITableViewDelegate,PopoverViewDelegate,PopoverBaseViewDelegate,ATCarouselViewDelegate,PSYScrollButtonsDelegate,PSYScrollButtonViewsDelegate>

@property (weak, nonatomic) IBOutlet UITableView *mainTableView;
@property (nonatomic, strong) NSMutableArray * headLinedataArray;

@end

static NSInteger segmentSelection = 0;

@implementation HDHomePageViewController


- (NSMutableArray *)headLinedataArray{

    if (!_headLinedataArray) {
        
        _headLinedataArray = [[NSMutableArray alloc]init];
    }

    return _headLinedataArray;

}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self requestData];
    
    [self setUpTableView];
    
}

- (void)setUpTableView{
    
    self.navigationController.navigationBar.tintColor = COLOR(blackColor);

    _mainTableView.dataSource = self;
    
    _mainTableView.delegate = self;
    
    _mainTableView.tableFooterView.backgroundColor = COLOR(lightGrayColor);
    
    [_mainTableView registerNib:[UINib nibWithNibName:@"HDTopScrollCell" bundle:nil] forCellReuseIdentifier:@"HDTopScrollCell"];
    [_mainTableView registerNib:[UINib nibWithNibName:@"HDMiddleCell" bundle:nil] forCellReuseIdentifier:@"HDMiddleCell"];
    
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineBaseCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineBaseCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineSingleViewCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineSingleViewCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineBigViewCellCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineBigViewCellCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineThreeViewCellCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineThreeViewCellCell"];
    
    WEAK_SELF;
    
    self.mainTableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
       
        [weakSelf requestData];
        
    }];
    
    self.mainTableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        
        [weakSelf requestData];
        
    }];
    
}

#pragma mark === tableview data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{

    return 3;

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{

    if (section == 2) {
        
        switch (segmentSelection) {
            case 0:
                return self.headLinedataArray.count;
                break;
            case 1:
                return 20;
                break;
            case 2:
                return 30;
                break;
            case 3:
                return 40;
                break;
                
            default:
                break;
        }
        
    }
    
    return 1;

}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{

    switch (indexPath.section) {
        case 0:
            return HDTopCellHeight;
            break;
        case 1:
            return HDMiddleCellHeight;
            break;
        case 2:
            if (segmentSelection == 0) {
                
                HDHeadLineModel * model = [self.headLinedataArray objectAtIndexCheck:indexPath.row];
                return model.cellHeight;

                
            }else if (segmentSelection == 1){
                
                return 200;
            
            }else if (segmentSelection == 2){
            
                return 150;
            
            }else if (segmentSelection == 3){
            
                return 50;
            
            }
            
            break;
            
        default:
            break;
    }
    
    return 0;

}


- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{

    if (section == 2) {
        
        return 0;
    }
    
    return 10;

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    switch (indexPath.section) {
            
        case 0:{
            
            self.mainTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
            
            HDTopScrollCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDTopScrollCell"];
            
            cell.topScrollView.delegate = self;
            cell.topScrollView.images = @[imageNamed(@"banner"),imageNamed(@"big_news")];
            cell.topScrollView.currentPageColor = [UIColor orangeColor];
            cell.topScrollView.pageColor = [UIColor grayColor];
            
            cell.topScrollButtons.delegate = self;
            
            return cell;
        }
            break;
            
        case 1:{
            self.mainTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
            
            HDMiddleCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDMiddleCell"];
            
            cell.psyScrollButtonView.delegate = self;
            
            return cell;
            
        }
            break;
        
        case 2:
            
            if(segmentSelection == 0){
                
                if (_headLinedataArray.count != 0) {
                
                self.mainTableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
                
                HDHeadLineModel * headlineModel = [self.headLinedataArray objectAtIndexCheck:indexPath.row];
                
                HDHeadLineBaseCell * cellBase = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineBaseCell"];
                cellBase.model = headlineModel;
                [cellBase.cancleButton addTarget:self action:@selector(cancelButtonOnTouchUpInside:) forControlEvents:UIControlEventTouchUpInside];
                
                HDHeadLineSingleViewCell * cellSingle = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineSingleViewCell"];
                cellSingle.model = headlineModel;
                [cellSingle.cancleButton addTarget:self action:@selector(cancelButtonOnTouchUpInside:) forControlEvents:UIControlEventTouchUpInside];
                
                HDHeadLineBigViewCellCell * cellBig = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineBigViewCellCell"];
                cellBig.model = headlineModel;
                [cellBig.cancleButton addTarget:self action:@selector(cancelButtonOnTouchUpInside:) forControlEvents:UIControlEventTouchUpInside];
                
                HDHeadLineThreeViewCellCell * cellThreeView = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineThreeViewCellCell"];
                cellThreeView.model = headlineModel;
                [cellThreeView.cacleButton addTarget:self action:@selector(cancelButtonOnTouchUpInside:) forControlEvents:UIControlEventTouchUpInside];
                
                if(headlineModel.pic.length > 1){
                    
                    if (!headlineModel.countmanypic) {
                        
                        return cellSingle;
                        
                    }
                    if (headlineModel.countmanypic) {
                        
                        if (headlineModel.countmanypic == 1) {
                            
                            return cellSingle;
                            
                        }else if (headlineModel.countmanypic == 2){
                            
                            return cellBig;
                            
                        }else if (headlineModel.countmanypic == 3){
                            
                            return cellThreeView;
                            
                        }
                    }
                }
                if (headlineModel.pic.length == 0) {
                    
                    if (!headlineModel.countmanypic) {
                        
                        return cellBase;
                    }
                    
                    if (headlineModel.countmanypic) {
                        if (headlineModel.countmanypic == 1) {
                            
                            return  cellSingle;
                            
                        }else if (headlineModel.countmanypic == 2){
                            
                            return cellBig;
                            
                        }else if (headlineModel.countmanypic == 3){
                            
                            return cellThreeView;
                            
                        }
                    }
                }
                }else{
                
                    UITableViewCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"cell1"];
                    
                    if (!cell) {
                        
                        cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell1"];
                    }
                    
                    cell.backgroundColor = COLOR(blueColor);
                    cell.textLabel.text = [NSString stringWithFormat:@"%ld",indexPath.row];
                    
                    return cell;
                
                }
            }else if (segmentSelection == 1){
            
                UITableViewCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"cell2"];
                
                if (!cell) {
                    
                    cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell2"];
                }
                
                cell.backgroundColor = COLOR(yellowColor);
                cell.textLabel.text = [NSString stringWithFormat:@"%ld",indexPath.row];
                
                return cell;
            
            }else if (segmentSelection == 2){
                
                UITableViewCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"cell3"];
                
                if (!cell) {
                    
                    cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell3"];
                }
                
                cell.backgroundColor = COLOR(cyanColor);
                cell.textLabel.text = [NSString stringWithFormat:@"%ld",indexPath.row];
                
                return cell;
                
            }else if (segmentSelection == 3){
                
                UITableViewCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"cell4"];
                
                if (!cell) {
                    
                    cell = [[UITableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"cell4"];
                }
                
                cell.backgroundColor = COLOR(lightGrayColor);
                cell.textLabel.text = [NSString stringWithFormat:@"%ld",indexPath.row];
                
                return cell;
                
            }
            break;
        default:
            break;
    }

    return nil;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    
    if (section == 2) {
        
        return 40;
        
    }
    return 0;
    
}

- (UIView *) tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    if (section == 2) {
        
        NSArray * btnDataSource = @[@"精选", @"热点资讯",@"牛股挖掘机", @"每日金股"];
        
        YJSegmentedControl * segment = [YJSegmentedControl segmentedControlFrame:CGRM(0, 0,SCREEN_SIZE_WIDTH , 40) titleDataSource:btnDataSource backgroundColor:[UIColor whiteColor] titleColor:[UIColor blackColor] titleFont:systemFont(16) selectColor:MAIN_COLOR buttonDownColor:MAIN_COLOR Delegate:self selectSeg:segmentSelection];
        
        return segment;
        
    }
    
    return nil;
}

#pragma mark ==== 点击事件
//头条快讯切换
- (void)segumentSelectionChange:(UIButton *)selection{
    
    NSLog(@"%ld",(long)selection.tag);
    
    if (selection.tag == 1200) {
        
        segmentSelection = 0;
        
    }else if (selection.tag == 1201){
        
        segmentSelection = 1;
        
    }else if (selection.tag == 1202){
        
        segmentSelection = 2;
        
    }else if (selection.tag == 1203){
        
        segmentSelection = 3;
        
    }
    
    [UIView performWithoutAnimation:^{
        
        [self.mainTableView reloadSection:2 withRowAnimation:UITableViewRowAnimationNone];
        
    }];
    
    [self.mainTableView scrollToRow:0 inSection:2 atScrollPosition:UITableViewScrollPositionTop animated:NO];
    
}
    

- (void)cancelButtonOnTouchUpInside:(UIButton *)sender{
        
    CGPoint point = [sender.superview convertPoint:sender.center toView:self.view];
        
    BaseView * baseview = [[BaseView alloc]initWithFrame:CGRectMake(0, 0, 150, 90)];
    baseview.backgroundColor = [UIColor whiteColor];
        
    baseview.layer.borderColor = [UIColor whiteColor].CGColor;
        
    baseview.layer.masksToBounds = YES;
        
    baseview.delegate = self;
    
    [PopoverView showPopoverAtPoint:point inView:self.view withContentView:baseview delegate:self];
        
}

- (void)popoverViewDismiss:(CGPoint)arrowPoint{
    
    //NSLog(@"坐标%f,%f,%f",arrowPoint.x,arrowPoint.y,self.mainTableView.contentOffset.y)
    
    CGPoint pathPoint = CGPointMake(arrowPoint.x, arrowPoint.y + self.mainTableView.contentOffset.y - 50);
    
    NSIndexPath * path = [self.mainTableView indexPathForRowAtPoint:pathPoint];
    
//    HDHeadLineBaseCell * cell = [self.mainTableView cellForRowAtIndexPath:path];
//    
//    NSLog(@"%f",cell.frame.origin.y);
    
    [self.headLinedataArray removeObjectAtIndex:path.row];
    [self.mainTableView deleteRowAtIndexPath:path withRowAnimation:UITableViewRowAnimationLeft];
    
}

- (void)carouselView:(ATCarouselView *)carouselView indexOfClickedImageBtn:(NSUInteger)index{
    
    NSLog(@"第%lu张图片被点击",(unsigned long)index);
    
}

- (void)psySimpleButtonOnTouched:(UIButton *)button{


    NSLog(@"点击%lu",(long)button.tag);


}

- (void)psyScrollButtonOnTouched:(UIButton *)button{

    NSLog(@"点击%lu",(long)button.tag);

}

- (IBAction)personalCenterButtonOntouched:(UIButton *)sender {
    
    HDPersonalCenterViewController * vc = [[HDPersonalCenterViewController alloc]init];
    
    
    [self.navigationController pushViewController:vc animated:NO];
    
}


- (IBAction)searchItemOntouched:(UIButton *)sender {
    
    HDSearchCenterViewController * vc = [[HDSearchCenterViewController alloc]init];
    
    [self.navigationController pushViewController:vc animated:NO];
    
    
}

#pragma mark - 网络请求
- (void)requestData{
    
    NSString * url = [NSString stringWithFormat:Home_HeadLineCateNews,1,20,1,arc4random()%10000];
    
    NSLog(@"%@",url);
    WEAK_SELF;
    //1.获取一个全局串行队列
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        NSURL * fullURL = [NSURL URLWithString:url];
       
        //创建请求对象
        NSMutableURLRequest *request = [NSMutableURLRequest requestWithURL:fullURL];

        //创建session配置对象
        NSURLSessionConfiguration *configuration = [NSURLSessionConfiguration defaultSessionConfiguration];
        //创建session对象
        NSURLSession *session = [NSURLSession sessionWithConfiguration:configuration];
        //添加网络任务
        NSURLSessionTask *task = [session dataTaskWithRequest:request completionHandler:^(NSData * _Nullable data, NSURLResponse * _Nullable response, NSError * _Nullable error) {
            
            if (error) {
                
                [self endRefresh];
                
                NSLog(@"这是错误信息%ld",error.code);
                
                return ;
                
            }
            
            [self endRefresh];

            
            NSDictionary * dic = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableContainers error:nil];
            
            NSArray *dataArray = [dic objectForKey:@"data"];
            
            for (NSDictionary * dic in dataArray) {
                
                HDHeadLineModel * headlinemodel = [HDHeadLineModel yy_modelWithDictionary:dic];
                
                [strongSelf.headLinedataArray addObject:headlinemodel];
                
            }
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [UIView performWithoutAnimation:^{
                    
                    [strongSelf.mainTableView reloadSection:2 withRowAnimation:UITableViewRowAnimationNone];
                    
                }];
                
            });

            
        }];
    
    //开始任务
    [task resume];
    
        

   });
    
}

#pragma mark--刷新进度条显示
//停止刷新
-(void)endRefresh{
    
    [self.mainTableView.mj_header endRefreshing];
    [self.mainTableView.mj_footer endRefreshing];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


@end
