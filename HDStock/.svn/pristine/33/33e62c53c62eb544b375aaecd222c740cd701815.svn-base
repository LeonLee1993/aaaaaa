//
//  HDHomePageViewController.m
//  HDStock
//  flag
//  Created by hd-app02 on 16/11/9.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "HDHomePageViewController.h"
#import "AppDelegate.h"
//左视图
#import "HDLeftMainViewController.h"
#import "GCDAsyncSocket.h"

@interface HDHomePageViewController ()<UITableViewDataSource,UITableViewDelegate,PSYScrollButtonsDelegate,PSYScrollButtonViewsDelegate, UIApplicationDelegate, SDCycleScrollViewDelegate, GCDAsyncSocketDelegate>

@property (weak, nonatomic) IBOutlet UITableView *mainTableView;
@property (strong, nonatomic) IBOutlet UIButton *messageCenter;
@property (nonatomic, strong) NSMutableArray * headLinedataArray;
@property (nonatomic, strong) NSMutableArray * bannerImageArray;
@property (nonatomic, strong) NSMutableArray * bannerDataArray;
@property (nonatomic, strong) NSMutableArray * hotNewsArray;
@property (nonatomic, strong) NSMutableArray * stockSayingArray;
@property (nonatomic, strong) NSString * token;
@property (nonatomic, strong) HDFailLoadView * failLoadView;
@property (nonatomic,strong) GCDAsyncSocket * thySocket;

@end

/***************  SOCKET的IP和端口号 *****************/
NSString * const SOCKET_IP = @"123.57.43.69";
UInt16 const SOCKET_PORT = 17171;

NSString * const QUOTATION_NOTE = @"quotation_notification";

@implementation HDHomePageViewController{

    NSInteger page;

    NSInteger perpage;
    
    NSInteger cateId;

}


- (NSMutableArray *)headLinedataArray{

    if (!_headLinedataArray) {
        
        _headLinedataArray = [[NSMutableArray alloc]init];
    }

    return _headLinedataArray;

}

- (NSMutableArray *)bannerImageArray{

    if (!_bannerImageArray) {
        _bannerImageArray = [[NSMutableArray alloc]init];
    }

    return _bannerImageArray;
}

- (NSMutableArray *)bannerDataArray{

    if (!_bannerDataArray) {
        _bannerDataArray = [[NSMutableArray alloc]init];
    }
    
    return _bannerDataArray;


}

- (NSMutableArray *)hotNewsArray{

    if (!_hotNewsArray) {
        _hotNewsArray = [[NSMutableArray alloc]init];
    }
    
    return _hotNewsArray;

}

- (NSMutableArray *)stockSayingArray{

    if (!_stockSayingArray) {
        _stockSayingArray = [[NSMutableArray alloc]init];
    }
    
    return _stockSayingArray;
    
}

- (void)viewWillAppear:(BOOL)animated{

    [super viewWillAppear:animated];
    
    NSDictionary *dicd = [[LYCUserManager informationDefaultUser] getUserInfoDic];
    
    if (dicd[@"token"]) {
        
        self.token = dicd[@"token"];
        
    }else{
        
        self.token = @"1";
        
    }


}

- (void)viewDidDisappear:(BOOL)animated{

    [super viewDidDisappear:animated];

    HDStockSayingCell * cell = [self.mainTableView viewWithTag:999];
    [cell playerPause];

}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    [self connectSocket];
    
    self.token = @"1";
    
    page = 1;
    
    perpage = 20;
    
    cateId = 1;
    
    [self requestData];
    [self requestBannerImage];
    [self requestHotNewsData];
    [self requestStockSayingData];
    [self setUpTableView];
   
}

- (void)setUpTableView{

    _mainTableView.dataSource = self;
    
    _mainTableView.delegate = self;
    
    _mainTableView.backgroundColor = BACKGROUNDCOKOR;
    
    _mainTableView.allowsSelection = YES;
    
    [_mainTableView registerNib:[UINib nibWithNibName:@"HDTopScrollCell" bundle:nil] forCellReuseIdentifier:@"HDTopScrollCell"];
    [_mainTableView registerNib:[UINib nibWithNibName:@"HDMiddleCell" bundle:nil] forCellReuseIdentifier:@"HDMiddleCell"];
    
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineBaseCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineBaseCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineSingleViewCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineSingleViewCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineBigViewCellCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineBigViewCellCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDHeadLineThreeViewCellCell" bundle:nil] forCellReuseIdentifier:@"HDHeadLineThreeViewCellCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDScrollWordsTableViewCell" bundle:nil] forCellReuseIdentifier:@"HDScrollWordsTableViewCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDStockSayingCell" bundle:nil] forCellReuseIdentifier:@"HDStockSayingCell"];
    [self.mainTableView registerNib:[UINib nibWithNibName:@"HDLoadFailCell" bundle:nil] forCellReuseIdentifier:@"HDLoadFailCell"];
    
    WEAK_SELF;
    
    self.mainTableView.mj_header = [PSYRefreshGifHeader headerWithRefreshingBlock:^{
       
        page = 1;
        [weakSelf requestData];
        [weakSelf requestBannerImage];
        [weakSelf requestHotNewsData];
        [weakSelf requestStockSayingData];
        
    }];
    
    self.mainTableView.mj_footer = [PSYRefreshGifFooter footerWithRefreshingBlock:^{
        
        page ++;
        
        [weakSelf requestData];
        
    }];
    
}

#pragma mark === tableview data source

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{

    return 5;

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{

    if (section == 4) {
        
        if (self.headLinedataArray.count != 0) {
            
            return self.headLinedataArray.count;
            
        }

    }
    
    return 1;

}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{

    switch (indexPath.section) {
        case 0:
            return HDTopCellHeight;
            break;
        case 1:
            return HDScrollWordsCellHeight;
            break;
        case 2:
        {
            if (kScreenIphone4 || kScreenIphone5) {
                
                return HDMiddleCellHeight + 40;
                
            }else{
                
                return HDMiddleCellHeight;
                
            }
            
        }
            break;
        case 3:
        {
            if (kScreenIphone4 || kScreenIphone5) {
                
                return HDStockSayingCellHeight + 40;
                
            }else if (kScreenIphone6){
                
                return HDStockSayingCellHeight + 20;
                
            }else{
            
                return HDStockSayingCellHeight;
            
            }
        
        }
            
            break;
        case 4:
            
                if (self.headLinedataArray.count == 0) {
                    
                    return SCREEN_HEIGHT;
                }else{
                
                HDHeadLineModel * model = [self.headLinedataArray objectAtIndexCheck:indexPath.row];
                return model.cellHeight;
                }
                
            break;
            
        default:
            break;
    }
    
    return 0;

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    switch (indexPath.section) {
            
        case 0:{
            
            HDTopScrollCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDTopScrollCell"];
            
            cell.ScrollView.delegate = self;
            cell.imageUrlArray = self.bannerImageArray;
            cell.topScrollButtons.delegate = self;
            
            return cell;
        }
            break;
        case 1:{
            
            HDScrollWordsTableViewCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDScrollWordsTableViewCell"];
            cell.wordsScorllView.delegate = self;
            
            NSMutableArray * muArray = [NSMutableArray new];
            
            for (HDHotNewsModel * model in self.hotNewsArray) {
             
            NSString * str = model.title;
                
                [muArray addObject:str];
            }
            
            cell.hotNewsArray = muArray;
            
            return cell;
            
        }
            break;
            
        case 2:{
            
            HDMiddleCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDMiddleCell"];
            
            cell.psyScrollButtonView.delegate = self;
            
            return cell;
            
        }
            break;
        case 3:{
            
            HDStockSayingCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDStockSayingCell"];
            cell.tag = 999;
            cell.urlArray = self.stockSayingArray;
            return cell;
            
        }
            break;
        
        case 4:
                
                if (_headLinedataArray.count != 0) {
                
                HDHeadLineModel * headlineModel = [self.headLinedataArray objectAtIndexCheck:indexPath.row];
                
                HDHeadLineBaseCell * cellBase = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineBaseCell"];
                cellBase.model = headlineModel;
                
                HDHeadLineSingleViewCell * cellSingle = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineSingleViewCell"];
                cellSingle.model = headlineModel;
                
                
                HDHeadLineBigViewCellCell * cellBig = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineBigViewCellCell"];
                cellBig.model = headlineModel;
                
                HDHeadLineThreeViewCellCell * cellThreeView = [tableView dequeueReusableCellWithIdentifier:@"HDHeadLineThreeViewCellCell"];
                cellThreeView.model = headlineModel;
                
                    if(headlineModel.pic.length > 1){
                        
                        if (!headlineModel.countmanypic) {
                            
                            return cellSingle;
                            
                        }
                        if (headlineModel.countmanypic) {
                            
                            if (headlineModel.countmanypic == 1) {
                                
                                return cellSingle;
                                
                            }else if (headlineModel.countmanypic == 2){
                                
                                return cellBig;
                                
                            }else if (headlineModel.countmanypic == 3){
                                
                                return cellThreeView;
                                
                            }
                        }
                    }
                    if (headlineModel.pic.length == 0) {
                        
                        if (!headlineModel.countmanypic) {
                            
                            return cellBase;
                        }
                        
                        if (headlineModel.countmanypic) {
                            if (headlineModel.countmanypic == 1) {
                                
                                return  cellSingle;
                                
                            }else if (headlineModel.countmanypic == 2){
                                
                                return cellBig;
                                
                            }else if (headlineModel.countmanypic == 3){
                                
                                return cellThreeView;
                                
                            }
                        }
                    }
                }else{
                
                    HDLoadFailCell * cell = [_mainTableView dequeueReusableCellWithIdentifier:@"HDLoadFailCell"];
                    self.failLoadView = cell.loadFailView;
                    [cell.loadFailView.button addTarget:self action:@selector(loadfailButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
                    
                    return cell;
                
                }
        
            break;
        default:
            break;
    }

    return nil;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    
    if (section == 4) {
        
        return 40;
        
    }
    return 0;
    
}

- (UIView *) tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section {
    
    if (section == 4) {
        
        HDHeaderView * view = [[HDHeaderView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 40)];
        
        return view;
        
    }
    
    return nil;
}

-(BOOL)tableView:(UITableView *)tableView shouldHighlightRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if (indexPath.section == 4 && self.headLinedataArray.count != 0) {
        return YES;
    }
    
    return NO;
    
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    HDHeadLineModel * model = [self.headLinedataArray objectAtIndexCheck:indexPath.row];
    
    HeadLineViewController * headVC = [[HeadLineViewController alloc]init];
    
    headVC.hidesBottomBarWhenPushed = YES;
    
    headVC.aid = model.aid;
    headVC.uid = model.uid;
    headVC.tittle = model.title;
    
    [self.navigationController pushViewController:headVC animated:NO];
    
    
}

#pragma mark ==== 点击事件

- (void)cycleScrollView:(SDCycleScrollView *)cycleScrollView didSelectItemAtIndex:(NSInteger)index{
    
    NSLog(@"第%lu张图片被点击",(unsigned long)index);
    
    Class class = cycleScrollView.superview.superview.class;
    
    HDAdvertisementModel * model = [self.bannerDataArray objectAtIndexCheck:index];
    HDHotNewsModel * hotModel = [self.hotNewsArray objectAtIndexCheck:index];
    
    if (class == [HDScrollWordsTableViewCell class] ) {
        
        HeadLineViewController * headVC = [[HeadLineViewController alloc]init];
        
        headVC.hidesBottomBarWhenPushed = YES;
        
        headVC.aid = hotModel.aid;
        //headVC.uid = model.uid;
        headVC.tittle = hotModel.title;
        if (hotModel.aid) {
            [self.navigationController pushViewController:headVC animated:NO];
        }
        
        
    }else{
        HDAdversementDetailViewController * headVC = [[HDAdversementDetailViewController alloc]init];
        
        headVC.hidesBottomBarWhenPushed = YES;
    
        headVC.url = model.link;
        
        [self.navigationController pushViewController:headVC animated:NO];
    
    }

}

- (void)psySimpleButtonOnTouched:(UIButton *)button{
    
    NSLog(@"%ld",(long)button.tag);
    
    HDStockNavigationController * infoNav = self.tabBarController.childViewControllers[2];
    HDStockNavigationController * liveNav = self.tabBarController.childViewControllers[3];
    HDStockNavigationController * hqNav = self.tabBarController.childViewControllers[1];
    HDInfoMationViewController * infoVC = infoNav.childViewControllers[0];
    
    switch (button.tag) {
        case 1000:
            infoVC.selectedVC = 0;
            infoVC.fromwhere = @"资讯";
            [self.tabBarController setSelectedViewController:infoNav];
            break;
        case 1001:
            [self.tabBarController setSelectedViewController:hqNav];
            break;
        case 1002:
            [self.mainTableView scrollToRow:0 inSection:3 atScrollPosition:UITableViewScrollPositionTop animated:NO];
            break;
        case 1003:
        {
            NSString * classStr = NSStringFromClass([PersonalproductViewController class]);
            id targetVC = [[NSClassFromString(classStr) alloc] init];
            UINavigationController *nav = [[UINavigationController alloc]initWithRootViewController:targetVC];
            [self presentViewController:nav animated:YES completion:^{
                
                
            }];
        }
            break;
        case 1004:
            
            infoVC.selectedVC = 2;
            infoVC.fromwhere = @"学技巧";
            
            [self.tabBarController setSelectedViewController:infoNav];
            break;
        case 1005:
        {
            PSYPopOutView * pop = [[PSYPopOutView alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
           
            [self.view.window addSubview:pop];
            
        }
            break;
        case 1006:
            [self.tabBarController setSelectedViewController:liveNav];
            break;
        case 1007:
        {
            if (self.token && ![self.token isEqualToString:@"1"]) {
                HDGetGoldenStock * pop = [[HDGetGoldenStock alloc]initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)];
                
                [self.view.window addSubview:pop];
            }else{
            
                PCSignInViewController * signVC = [[PCSignInViewController alloc]init];
                
                [self presentViewController:signVC animated:YES completion:^{
                    
                    
                }];
            
            
            }
            
            
        }
            break;
            
        default:
            break;
    }
    
}

- (void)psyScrollButtonOnTouched:(UIButton *)button{

    ProductDetailViewController *PDVC = [[ProductDetailViewController alloc]init];
    switch (button.tag) {
        case 1100:
            PDVC.title = @"X6尊享版";
            PDVC.urlStr = @"http://gk.cdtzb.com/api/product/x6";
            PDVC.priceStr = @"998";
            break;
        case 1101:
            PDVC.title = @"擒牛";
            PDVC.urlStr = @"http://gk.cdtzb.com/api/product/qn";
            PDVC.priceStr = @"1998";
            break;
        case 1102:
            PDVC.title = @"降龙";
            PDVC.urlStr = @"http://gk.cdtzb.com/api/product/xl";
            PDVC.priceStr = @"3998";
            break;
        case 1103:
            PDVC.title = @"捉妖";
            PDVC.urlStr = @"http://gk.cdtzb.com/api/product/zy";
            PDVC.priceStr = @"5998";
            break;
            
        default:
            break;
    }

    
    [self.navigationController pushViewController:PDVC animated:NO];

}

- (void)loadfailButtonOnTouched:(UIButton *)button{
    
    [self.failLoadView hideTheSubViews];

    [self requestData];
    [self requestBannerImage];
    [self requestHotNewsData];
    [self requestStockSayingData];

}

#pragma mark - 网络请求
- (void)requestData{
    
    [self.failLoadView hideTheSubViews];
    
    NSString * url = [NSString stringWithFormat:Home_HeadLineCateNews,(long)page,(long)perpage,(long)cateId,self.token,arc4random()%10000];

    NSLog(@"%@",url);
    WEAK_SELF;
    //1.获取一个全局串行队列
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            
            NSArray * dataArr = json[@"data"];
            if (dataArr.count < perpage) {
                
                [strongSelf.mainTableView.mj_footer endRefreshingWithNoMoreData];
                
            }else{
                
                [strongSelf endRefresh];
                
            }
            if (1 == page) { // 说明是在重新请求数据.
                
                [strongSelf.headLinedataArray removeAllObjects];
            }
            
            
            for (NSDictionary * dic in dataArr) {
                
                HDHeadLineModel * headlinemodel = [HDHeadLineModel yy_modelWithDictionary:dic];
                
                [strongSelf.headLinedataArray addObject:headlinemodel];
                
            }
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [strongSelf.mainTableView reloadData];
                
            });
            
        } failure:^(NSError *error) {
            
            [strongSelf endRefresh];
            [strongSelf.failLoadView showTheSubViews];
        }];
        
    });
    
    
    
}

- (void)requestBannerImage{

    NSString * bannerUrl = [NSString stringWithFormat:Advertisement,1,arc4random()%10000];
    
    NSLog(@"广告图片%@",bannerUrl);
    WEAK_SELF;
    //1.获取一个全局串行队列
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:bannerUrl params:nil success:^(id json) {
            [self.bannerDataArray removeAllObjects];
             [self.bannerImageArray removeAllObjects];
            NSArray * array = json[@"data"];
            
            for (NSDictionary * dic in array) {
                
                HDAdvertisementModel * adModel = [HDAdvertisementModel yy_modelWithDictionary:dic];
                
                [self.bannerDataArray addObject:adModel];
                
                NSString * str = dic[@"url"];
                [strongSelf.bannerImageArray addObject:str];
            
            }
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [strongSelf.mainTableView reloadData];
                
            });
            
        } failure:^(NSError *error) {
            
        }];
        
    });


}

- (void)requestHotNewsData{
    
    NSString * hotNewsUrl = [NSString stringWithFormat:Home_HotNews,arc4random()%10000];
    
    WEAK_SELF;
    //1.获取一个全局串行队列
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:hotNewsUrl params:nil success:^(id json) {
            [self.hotNewsArray removeAllObjects];
            NSArray * array = json[@"data"];
            
            for (NSDictionary * dic in array) {
                
                HDHotNewsModel * adModel = [HDHotNewsModel yy_modelWithDictionary:dic];

                [strongSelf.hotNewsArray addObject:adModel];
                
            }
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [strongSelf.mainTableView reloadData];
                
            });
            
        } failure:^(NSError *error) {
            
        }];
        
    });
    
    
}

- (void)requestStockSayingData{
    
    NSString * stockSayingUrl = [NSString stringWithFormat:Home_HeadLineCateNews,1,5,28,self.token,arc4random()%10000];
    NSLog(@"2222%@",stockSayingUrl);
    WEAK_SELF;
    //1.获取一个全局串行队列
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:stockSayingUrl params:nil success:^(id json) {
            
            [self.stockSayingArray removeAllObjects];
            NSArray * dataArr = json[@"data"];
            
            for (NSDictionary * dic in dataArr) {
                
                HDHeadLineModel * headlinemodel = [HDHeadLineModel yy_modelWithDictionary:dic];
                
                [strongSelf.stockSayingArray addObject:headlinemodel];
                
            }
            
            dispatch_async(dispatch_get_main_queue(), ^{
                
                [strongSelf.mainTableView reloadData];
                
            });

            
        } failure:^(NSError *error) {
            
        }];
        
    });
    
    
}



#pragma mark--刷新进度条显示
//停止刷新
-(void)endRefresh{
    
    [self.mainTableView.mj_header endRefreshing];
    [self.mainTableView.mj_footer endRefreshing];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark ---左视图逻辑

#if 1
- (IBAction)personalCenterButtonOntouched:(UIButton *)sender {
    
    AppDelegate *tempDelegate = (AppDelegate *)[[UIApplication sharedApplication] delegate];

    if (tempDelegate.leftSideVc.sideClosed) {
        [tempDelegate.leftSideVc openLeftView];
    }else {
        [tempDelegate.leftSideVc closeLeftView];
    }
}


- (IBAction)searchItemOntouched:(UIButton *)sender {
    
    NSString * classStr = NSStringFromClass([PCMessageCenterViewController class]);
    id targetVC = [[NSClassFromString(classStr) alloc] init];
    UINavigationController *nav = [[UINavigationController alloc]initWithRootViewController:targetVC];
    [self presentViewController:nav animated:YES completion:^{
        
        
    }];
    
    [self.messageCenter clearBadge];
 //PCMessageCenterViewController * pcVC = [[PCMessageCenterViewController alloc]init];
    
    //[self.navigationController pushViewController:pcVC animated:YES];

}

#endif

#pragma mark == socket
- (void) connectSocket {

    [self cutOffSocket];

    [self socketConnectHost];
    
}
//断开
- (void) cutOffSocket {
    [self.thySocket disconnect];
}
//连接
-(void)socketConnectHost{
    
    if (!self.thySocket) {
        self.thySocket = [[GCDAsyncSocket alloc] initWithDelegate:self delegateQueue:dispatch_get_main_queue()];
    }    NSError *error = nil;
    BOOL boo = [self.thySocket connectToHost:SOCKET_IP onPort:SOCKET_PORT withTimeout:-1 error:&error];
    NSLog(@"boolResult -- %d",boo);
    
    if(error) {
        NSLog(@"连接错误%@", error);
        return;
    }else{
        NSLog(@"成功");
    }
}
// 心跳
-(void)longConnectToSocket {
    
    NSString *longConnect = @"aaa";
    NSData   *dataStream  = [longConnect dataUsingEncoding:NSUTF8StringEncoding];
    [self.thySocket writeData:dataStream withTimeout:-1 tag:1];
    
}
#pragma mark - GCDAsynSocket Delegate
- (void)socket:(GCDAsyncSocket*)sock didConnectToHost:(NSString*)host port:(uint16_t)port{
    
    NSLog(@"didConnectToHost链接成功");
    [self.thySocket readDataWithTimeout:-1 tag:0];

    [self longConnectToSocket];
    
}

- (void)socket:(GCDAsyncSocket*)sock didReadData:(NSData*)data withTag:(long)tag{
    
    NSDictionary * tempDic = [self handleSocketWithData:data];//处理socket数据
    NSLog(@"socketData %@",tempDic);
    
    if ([[tempDic allKeys] count] >= 1) {
        
        [self sendSocketData:tempDic];
    }
    
    [self.thySocket readDataWithTimeout:-1 tag:0];
}

- (void) sendSocketData:(NSDictionary *) dic {

    NSDictionary *dict = [NSDictionary dictionaryWithObject:dic forKey:@"socketQuotation"];
    //发送通知
    [[NSNotificationCenter defaultCenter]postNotificationName:QUOTATION_NOTE object:nil userInfo:dict];
        
}

- (NSDictionary *) handleSocketWithData:(NSData *) data{
    
    NSDictionary *json = [NSJSONSerialization JSONObjectWithData:data options:NSJSONReadingMutableLeaves error:nil];
    
    return json;
}

- (void) socketDidDisconnect:(GCDAsyncSocket *)sock withError:(NSError *)err {
    NSLog(@"socketDidDisconnect：Socket连接断开的时候调用，无论此时是正常断开还是异常断开。正常断开err为空。err:%@",err);
    
}

- (void)onSocket:(GCDAsyncSocket *)sock willDisconnectWithError:(NSError *)err {
    NSLog(@"onSocket：willDisconnectWithError：只要调用这个，socket是一定要被关掉。err: -- %@",err);
}

- (void)onSocketDidDisconnect:(GCDAsyncSocket *)soc {
    NSLog(@"onSocketDidDisconnect  无论Socket连接断开时候是否报错都会调用下面这个方法: --%@",soc);
}

#pragma mark == 收到消息
- (void)showMessageDot{
    
    self.messageCenter.badgeCenterOffset = CGPointMake(-3, 3);
    self.messageCenter.badgeBgColor = [UIColor colorWithHexString:@"#c03333"];
    [self.messageCenter showBadge];
    
}

@end
