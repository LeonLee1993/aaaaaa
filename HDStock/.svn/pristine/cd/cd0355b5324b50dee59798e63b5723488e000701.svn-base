//
//  MyCollectViewController.m
//  HDStock
//
//  Created by liyancheng on 16/11/28.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "MyCollectViewController.h"
#import "HDPCCollectedInformationCell.h"
#import "HDPCCollectedVideoCell.h"
#import "MyCollectedDataModel.h"
#import "HeadLineViewController.h"
#import "HDVideoDetailsViewController.h"

@interface MyCollectViewController ()<UITableViewDataSource,UITableViewDelegate>

@end

@implementation MyCollectViewController{
    NSInteger page;
    NSMutableArray *dataArr;
    NSString *typeId;
}

- (void)viewDidLoad {
    page = 1;
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    [self setHeader:@"我的收藏"];
    [self initTopViewWithArray:@[@"资讯",@"视频"]];
    [self setTableViewsWithCellKindsArray:@[@"",@""]];
    [self setTableView];
    if(!dataArr){
        dataArr = @[].mutableCopy;
    }
    typeId = @"1";
    [self loadDataOfCollected];
//    [self.tableView1.mj_header ref]
    
}

- (void)loadDataOfCollected{
    
    NSDictionary *dic = [[LYCUserManager informationDefaultUser]getUserInfoDic];
    if([dic[PCUserState] isEqualToString:@"success"]){
        NSMutableDictionary *mutDic = @{}.mutableCopy;
        [mutDic setObject:dic[PCUserToken] forKey:@"token"];
        NSString * url = [NSString stringWithFormat:PCMyCollectedURL,(long)page,typeId];
        WEAK_SELF;
        STRONG_SELF;
        [[CDAFNetWork sharedMyManager]get:url params:mutDic success:^(id json) {
            if([json[@"data"] isKindOfClass:[NSNull class]]){
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"没有更多数据了";
                [hud hideAnimated:YES afterDelay: 1];
                [self endRefresh];
            }else{
                for (NSDictionary *dic in json[@"data"]) {
                    MyCollectedDataModel *model = [MyCollectedDataModel yy_modelWithDictionary:dic];
                    [dataArr addObject:model];
                }
                [self.tableView1 reloadData];
                [self.tableView2 reloadData];
                [self endRefresh];
            }
        } failure:^(NSError *error) {
            MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
            hud.mode = MBProgressHUDModeText;
            hud.label.text = @"您的网络不给力!";
            [hud hideAnimated:YES afterDelay: 2];
        }];
    }
    else{
        MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:self.view animated:YES];
        hud.mode = MBProgressHUDModeText;
        hud.label.text = @"请先登录";
        [hud hideAnimated:YES afterDelay: 1];
    }
    
}

- (void)setTableView{
    self.tableView1.delegate = self;
    self.tableView1.dataSource = self;
    [self.tableView1 registerNib:[UINib nibWithNibName:@"HDPCCollectedInformationCell" bundle:nil] forCellReuseIdentifier:@"HDPCCollectedInformationCell"];
    self.tableView2.delegate = self;
    self.tableView2.dataSource = self;
    self.tableView1.separatorStyle = UITableViewCellSeparatorStyleNone;
    self.tableView2.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.tableView2 registerNib:[UINib nibWithNibName:@"HDPCCollectedVideoCell" bundle:nil] forCellReuseIdentifier:@"HDPCCollectedVideoCell"];
    WEAK_SELF;
    self.tableView1.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [dataArr removeAllObjects];
        page = 1;
        [weakSelf loadDataOfCollected];
    }];
    
    self.tableView1.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        page ++;
        [weakSelf loadDataOfCollected];
    }];
    
    self.tableView2.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [dataArr removeAllObjects];
        page = 1;
        [weakSelf loadDataOfCollected];
    }];
    
    self.tableView2.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingBlock:^{
        page ++;
        [weakSelf loadDataOfCollected];
    }];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return dataArr.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    if(tableView == self.tableView1){
        HDPCCollectedInformationCell * cell = [tableView dequeueReusableCellWithIdentifier:@"HDPCCollectedInformationCell"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        cell.model = dataArr[indexPath.row];
        return cell;
    }else if (tableView == self.tableView2){
        HDPCCollectedInformationCell * cell = [tableView dequeueReusableCellWithIdentifier:@"HDPCCollectedVideoCell"];
        cell.model = dataArr[indexPath.row];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        return cell;
    }else{
        return nil;
    }
}

-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    if (tableView == self.tableView1) {
        return 118;
    }else if(tableView == self.tableView2){
        return 118;
    }else{
        return 0;
    }
}

-(BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}

- (UITableViewCellEditingStyle)tableView:(UITableView *)tableView
           editingStyleForRowAtIndexPath:(NSIndexPath *)indexPath {
    return UITableViewCellEditingStyleDelete;
}

- (void)tableView:(UITableView *)tableView commitEditingStyle:
(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath *)indexPath {
    if (editingStyle == UITableViewCellEditingStyleDelete) {
        MyCollectedDataModel * model = dataArr[indexPath.row];
        [self cancelCollectionWithAid:model.favid andIndexPath:indexPath];
    }
}

- (void)cancelCollectionWithAid:(NSString* )aid andIndexPath:(NSIndexPath *)indexPath{
    
    WEAK_SELF;
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    NSString * url = [NSString stringWithFormat:CancelCollection,aid,arc4random()%1000];
    NSLog(@"删除收藏%@",url);
    NSDictionary *infoDic=[[LYCUserManager informationDefaultUser]getUserInfoDic];
    NSMutableDictionary *dic = @{}.mutableCopy;
    [dic setObject:infoDic[PCUserToken] forKey:@"token"];
    dispatch_async(queue, ^{
        STRONG_SELF;
        [[CDAFNetWork sharedMyManager]get:url params:dic success:^(id json) {
            NSString * code = json[@"code"];
            NSLog(@"%@",json[@"msg"]);
            if (code.integerValue == 2) {
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏删除成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                NSUInteger row = [indexPath row];
                [dataArr removeObjectAtIndex:row];
                [self.tableView1 deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationAutomatic];
            }else if (code.integerValue == 101){
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏不存在!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }
            
        } failure:^(NSError *error) {
            
            
        }];
    });
}


-(void)endRefresh{
    [self.tableView1.mj_header endRefreshing];
    [self.tableView1.mj_footer endRefreshing];
    [self.tableView2.mj_header endRefreshing];
    [self.tableView2.mj_footer endRefreshing];
}

-(void)topButtonEvent:(UIButton *)sender{
    [super topButtonEvent:sender];
    NSLog(@"%ld",(long)sender.tag);
    if(sender.tag == 200){
        typeId = @"1";
        [self.tableView1.mj_header beginRefreshing];
    }else{
        typeId = @"2";
        [self.tableView1.mj_header beginRefreshing];
    }
    
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if([typeId isEqualToString:@"1"]){
        HeadLineViewController *headLine = [[HeadLineViewController alloc]init];
        MyCollectedDataModel *model = dataArr[indexPath.row];
        [self.navigationController pushViewController:headLine animated:YES];
    }else{
        MyCollectedDataModel *model = dataArr[indexPath.row];
        HDVideoDetailsViewController * videoDetail = [[HDVideoDetailsViewController alloc]init];
        [self.navigationController pushViewController:videoDetail animated:YES];
    }
}


@end
