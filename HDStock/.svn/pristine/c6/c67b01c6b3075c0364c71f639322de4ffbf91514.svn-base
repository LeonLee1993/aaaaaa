//
//  HDVideoDetailsViewController.m
//  HDStock
//
//  Created by hd-app02 on 2016/11/24.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "HDVideoDetailsViewController.h"
#import <AVFoundation/AVFoundation.h>
#import <MediaPlayer/MediaPlayer.h>
#import "ZFPlayer.h"
#import "HDViedeoTitleViewCell.h"
#import "HDVideoListCell.h"
#import "HDNewsDetailsModel.h"
#import "HDNewsVideoRelatedModel.h"
#import <IQKeyboardManager.h>
#import <UIView+WZLBadge.h>
#import "ZHFactory.h"

static NSString * const isPraised = @"isPraised.plist";

@interface HDVideoDetailsViewController ()<ZFPlayerDelegate, UITableViewDelegate, UITableViewDataSource>

@property (strong, nonatomic) IBOutlet UIView *TopStatusView;
/** 播放器View的父视图*/
@property (strong, nonatomic) IBOutlet UIView *playerFatherView;
@property (strong, nonatomic) ZFPlayerView *playerView;
/** 离开页面时候是否在播放 */
@property (nonatomic, assign) BOOL isPlaying;
@property (nonatomic, strong) ZFPlayerModel *playerModel;
@property (strong, nonatomic) IBOutlet UITableView *tableview;
@property (strong, nonatomic) IBOutlet UIButton *praiseButton;

@property (strong, nonatomic) IBOutlet UIButton *collectionButton;
@property (strong, nonatomic) IBOutlet UIButton *shareButton;

@property (strong, nonatomic) NSMutableArray * relatedArray;

@property (assign, nonatomic) NSInteger favid;
@end

@implementation HDVideoDetailsViewController{

    NSInteger page;
    NSInteger perpage;

}

- (NSMutableArray *)relatedArray{

    if (!_relatedArray) {
        
        _relatedArray = [NSMutableArray array];
    }
    
    return _relatedArray;


}

- (void)viewWillAppear:(BOOL)animated{
    
    [super viewWillAppear:animated];
    [self.navigationController.navigationBar setHidden:YES];
}

- (void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self.tabBarController.tabBar setHidden:NO];
    
    [self.navigationController.navigationBar setHidden:NO];
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
    page = 1;
    
    perpage = 5;
    
    self.view.backgroundColor = COLOR(whiteColor);
    
    [self setUpTopPlayerView];
    
    [self setUpTableView];
    
    [self setUpButtons];
    
    [self requestData];
    
}

- (void)setUpTableView{

    self.tableview.delegate = self;
    self.tableview.dataSource = self;
    
    self.tableview.allowsSelection = YES;
    
    [self.tableview registerNib:[UINib nibWithNibName:@"HDViedeoTitleViewCell" bundle:nil]forCellReuseIdentifier:@"HDViedeoTitleViewCell"];

    [self.tableview registerNib:[UINib nibWithNibName:@"HDVideoListCell" bundle:nil] forCellReuseIdentifier:@"HDVideoListCell"];
    
}

- (void)setUpTopPlayerView{

    self.TopStatusView.backgroundColor = MAIN_COLOR;
    self.playerView = [[ZFPlayerView alloc] init];
    
    [self.view addSubview:_TopStatusView];
    [self.view addSubview:self.playerFatherView];
    [self.playerFatherView addSubview:self.playerView];
    [self.playerView mas_makeConstraints:^(MASConstraintMaker *make) {
       make.edges.mas_offset(UIEdgeInsetsZero);
    }];
    ZFPlayerControlView *controlView = [[ZFPlayerControlView alloc] init];
    [self.playerView playerControlView:controlView playerModel:self.playerModel];
    self.playerView.delegate = self;
    
    [self.playerView autoPlayTheVideo];

}

- (void)setUpButtons{
    
    [self.collectionButton addTarget:self action:@selector(collectionButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
    NSDictionary * dic = [ZHFactory readPlistWithPlistName:isPraised];
    
    NSString * isPraised = dic[[NSString stringWithFormat:@"%ld",self.ItemAid]];
    
    if (isPraised) {
        
        self.collectionButton.selected = YES;
        
    }else{
    
        self.collectionButton.selected = NO;
    
    }
    
}


#pragma mark - ZFPlayerDelegate

- (void)zf_playerBackAction
{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - Getter

- (ZFPlayerModel *)playerModel
{
    if (!_playerModel) {
        _playerModel                  = [[ZFPlayerModel alloc] init];
        _playerModel.videoURL         = [NSURL URLWithString:@"http://dscj.oss-cn-shanghai.aliyuncs.com/record/dscj/dscj_73.m3u8"];
        _playerModel.placeholderImageURLString = self.picUrl;
        _playerModel.fatherView       = self.playerFatherView;
        
    }
    return _playerModel;
}

#pragma mark - tableview
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{

    return 2;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{

    switch (section) {
        case 0:
            return 1;
            break;
        case 1:
            if (self.relatedArray.count < 4) {
                return self.relatedArray.count;
            }else{
                
                return 0;
                
            }
            break;
        default:
            break;
    }
    
    return 0;

}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    HDNewsVideoRelatedModel * model = [self.relatedArray objectAtIndexCheck:indexPath.row];
    
    HDVideoListCell * cellSingle = [tableView dequeueReusableCellWithIdentifier:@"HDVideoListCell"];
    cellSingle.model = model;
    cellSingle.selectionStyle = UITableViewCellSelectionStyleNone;

    HDViedeoTitleViewCell * titleCell = [tableView dequeueReusableCellWithIdentifier:@"HDViedeoTitleViewCell"];
    
    titleCell.titleLabel.text = self.videoTitle;
    
    titleCell.lookLabel.text = [NSString stringWithFormat:@"%ld",(long)self.videoLook];
    
    if (self.tagsname) {
        
        [titleCell.tagBGView setHidden:NO];
        [titleCell.tagLabel setHidden:NO];
        
        titleCell.tagLabel.text = self.tagsname;
        
    }else{
    
        [titleCell.tagBGView setHidden:YES];
        [titleCell.tagLabel setHidden:YES];
        
    }
    
    if (indexPath.section == 0) {
        return titleCell;
    }else{
        
        return cellSingle;
    }

}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{

    if (indexPath.section == 0) {
        return  80;
    }else{
    return 115;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{

    if (section != 0) {
        return 40;
    }
    return 1;

}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{

    return 1;

}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{

    UILabel * label = [[UILabel alloc]initWithFrame:CGRectMake(0, 10, self.view.bounds.size.width, 40)];
    label.backgroundColor = COLOR(whiteColor);
    if (section == 1) {
        
        label.text = @"  推荐";
        return label;
        
    }else{
    
        return nil;
    
    }

}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section{

    UIView * view = [[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, 1)];
    
    view.backgroundColor = COLOR(whiteColor);
    
    return view;

}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{

    [self.playerView removeFromSuperview];
    
    HDNewsVideoRelatedModel * model = [self.relatedArray objectAtIndexCheck:indexPath.row];
    
    self.videoTitle = model.title;
    self.videoLook = model.aid;
    
    if (model.tags_name) {
        
        self.tagsname = model.tags_name.allValues[0];
    }
    
    self.picUrl = model.pic;
    
    self.videoUrl = model.fromurl;
    
    self.ItemAid = model.aid;
    
    [self setUpTopPlayerView];
    
    [self requestData];
}

- (BOOL)tableView:(UITableView *)tableView shouldHighlightRowAtIndexPath:(NSIndexPath *)indexPath{

    if (indexPath.section == 0) {
        
        return NO;
    }else{

    return YES;

    }
}


#pragma mark == 网络请求
- (void)requestData{
    
    
    NSString * url = [NSString stringWithFormat:NewsDetails,(long)self.ItemAid,arc4random()%1000];
    
    NSLog(@"%@",url);
    WEAK_SELF;
    //1.获取一个全局串行队列
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    //
    //    //2.把任务添加到队列中执行
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            
            NSDictionary * dataDic = json[@"data"];
            [self.relatedArray removeAllObjects];
            
            HDNewsDetailsModel * model = [HDNewsDetailsModel yy_modelWithDictionary:dataDic];
            
            for (NSDictionary * dic in model.related) {
                
                HDNewsVideoRelatedModel * deModel = [HDNewsVideoRelatedModel yy_modelWithDictionary:dic];
                
                [strongSelf.relatedArray addObject:deModel];
            }
            
            dispatch_async(dispatch_get_main_queue(), ^{
                NSLog(@"重新刷新");
                [strongSelf.tableview reloadData];
                
                
            });
            
        } failure:^(NSError *error) {
            
            
            
        }];
        
        
    });
    
}

- (void)collectionTheArticle{

    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:CollectionTheArticle,(long)self.ItemAid,(long)self.ItemAid,arc4random()%1000];
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            
            NSDictionary * dic = json[@"data"];
            NSString * favaid = dic[@"favid"];
            NSString * code = json[@"code"];
            NSMutableDictionary * faDic = [ZHFactory readPlistWithPlistNameReturnMutableDictionary:isPraised];
            [faDic setValue:favaid forKey:[NSString stringWithFormat:@"%ld",self.ItemAid]];
            if (code.integerValue == 1) {
                [self plistHuanCunWithDic:faDic];
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (code.integerValue == 100){
            
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"请勿重复收藏!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            
            }
            
        } failure:^(NSError *error) {

            
        }];

    });
    
}
    
- (void)cancelCollection{

    NSMutableDictionary * dic = [ZHFactory readPlistWithPlistNameReturnMutableDictionary:isPraised];
    NSString * favid = dic[[NSString stringWithFormat:@"%ld",self.ItemAid]];
    self.favid = favid.integerValue;
    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:CancelCollection,(long)self.favid,arc4random()%1000];
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            NSString * code = json[@"code"];
            if (code.integerValue == 2) {
                [dic removeObjectForKey:[NSString stringWithFormat:@"%ld",self.ItemAid]];
                [self plistHuanCunWithDic:dic];
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏删除成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (code.integerValue == 101){
                
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏不存在!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                
            }
            
        } failure:^(NSError *error) {
            
            
        }];
    });
}

- (void)collectionButtonOnTouched:(UIButton *)button{
    
    if (button.selected == NO) {
        
        [self collectionTheArticle];
        
    }else if(button.selected == YES){
        
        [self cancelCollection];
        
    }
    button.selected = !button.selected;

}

#pragma mark- plist缓存
//缓存数据到本地plist
- (void) plistHuanCunWithDic:(NSDictionary *) dic {
    
    NSArray *path = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsPath = [path objectAtIndex:0];
    NSString *plistPath = [documentsPath stringByAppendingPathComponent:isPraised];
    //写入
    [dic writeToFile:plistPath atomically:YES];
}

- (void)dealloc{

    [self.playerView removeFromSuperview];
    

}

@end
