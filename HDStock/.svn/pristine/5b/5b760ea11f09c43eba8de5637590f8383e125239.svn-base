//
//  HeadLineViewController.m
//  HDGolden
//
//  Created by hd-app02 on 16/10/13.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "HeadLineViewController.h"
#import <WebKit/WebKit.h>
#import <IQKeyboardManager.h>
#import <UIView+WZLBadge.h>
#import <CommonCrypto/CommonDigest.h>
#import "ZHFactory.h"

static NSString * const isPraised = @"isPraised.plist";
@interface HeadLineViewController ()<WKUIDelegate, WKNavigationDelegate, UIWebViewDelegate, UITextViewDelegate, UITextFieldDelegate>

@property (strong, nonatomic) UIView *commentBigBGView;
@property (strong, nonatomic) UIView *commentBGView;
@property (strong, nonatomic) UIView * bottomView;
@property (strong, nonatomic) UITextField *commentTextField;
@property (strong, nonatomic) UITextView *comantTextView;
@property (strong, nonatomic) UIButton *comment;
@property (strong, nonatomic) UIButton *commentsNumber;
@property (strong, nonatomic) UIButton *collectionButton;
@property (strong, nonatomic) UIButton *shareButton;
@property (assign, nonatomic) NSInteger favid;

@property (nonatomic, strong) UIWebView * webView;//网页>
//@property (nonatomic, strong) WKWebView * webView;
@end

@implementation HeadLineViewController

- (void)viewDidLoad{

    [super viewDidLoad];
    [self setNormalBackNav];
    [self setNavBarRightItemWithImage:[UIImage imageNamed:@"xiangqing-fenxiang"]];
    [self setUpTextView];
    [self loadData];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(keyboardWillShow:) name:UIKeyboardWillShowNotification object:nil];
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [IQKeyboardManager sharedManager].enable = NO;
    [self.navigationController.navigationBar setHidden:NO];
    
}

- (void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [IQKeyboardManager sharedManager].enable = YES;
    [self.tabBarController.tabBar setHidden:NO];
    
    [self.navigationController.navigationBar setHidden:YES];
    
}


- (void)setUpTextView{
    self.webView = [[UIWebView alloc] initWithFrame: CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height - NAV_STATUS_HEIGHT - 50)];
    self.webView.backgroundColor = [UIColor whiteColor];
    self.webView.opaque = NO;
    self.webView.delegate = self;
    
    //如果你导入的MJRefresh库是最新的库，就用下面的方法创建下拉刷新和上拉加载事件
    self.webView.scrollView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(headerRefresh)];
    self.webView.scrollView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(footerRefresh)];
    [self.view addSubview:self.webView];
    
    self.commentBigBGView = [[UIView alloc]initWithFrame:self.view.bounds];
    self.commentBigBGView.backgroundColor = COLOR(blackColor);
    [self.view addSubview:self.commentBigBGView];
    [self.view sendSubviewToBack:self.commentBigBGView];
    
    self.bottomView = [[UIView alloc]initWithFrame:CGRectZero];
    self.bottomView.backgroundColor = COLOR(whiteColor);
    [self.view addSubview:self.bottomView];
    [self.bottomView mas_makeConstraints:^(MASConstraintMaker *make) {
       
        make.bottom.right.left.equalTo(self.view);
        make.height.mas_equalTo(50);
    }];
    
    self.commentTextField = [[UITextField alloc]initWithFrame:CGRectZero];
    self.commentTextField.placeholder = @"我来说两句";
    self.commentTextField.font = systemFont(14);
    self.commentTextField.borderStyle = UITextBorderStyleRoundedRect;
    [self.bottomView addSubview:self.commentTextField];
    
    [self.commentTextField mas_makeConstraints:^(MASConstraintMaker *make) {
       
        make.left.equalTo(self.bottomView).with.offset(10);
        make.top.equalTo(self.bottomView).with.offset(10);
        make.bottom.equalTo(self.bottomView).with.offset(-10);
    }];
    
    self.commentsNumber = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 20, 19)];
    [self.commentsNumber setBackgroundImage:imageNamed(@"shipingxiangqing-pinglun") forState:UIControlStateNormal];
    [self.bottomView addSubview:self.commentsNumber];
    [self.commentsNumber mas_makeConstraints:^(MASConstraintMaker *make) {
        
        make.size.mas_equalTo(CGSizeMake(20, 19));
        make.centerY.equalTo(self.commentTextField);
        make.left.equalTo(self.commentTextField.mas_right).with.offset(20);
        
    }];
    self.commentsNumber.badgeMaximumBadgeNumber = 1000;
    [self.commentsNumber showBadgeWithStyle:WBadgeStyleNumber value:876 animationType:WBadgeAnimTypeBreathe];
    
    
    
    self.collectionButton = [[UIButton alloc]init];
    [self.collectionButton setBackgroundImage:imageNamed(@"shipingxiangqing-shoucang") forState:UIControlStateNormal];
    [self.collectionButton setBackgroundImage:imageNamed(@"shipinxiangqing-xuanzhong") forState:UIControlStateSelected];
    [self.bottomView addSubview:self.collectionButton];
    [self.collectionButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(20, 19));
        make.centerY.equalTo(self.commentTextField);
        make.left.equalTo(self.commentsNumber.mas_right).with.offset(20);
        
    }];
    
    self.shareButton = [[UIButton alloc]init];
    [self.shareButton setBackgroundImage:imageNamed(@"shipingxiangqing-dianzan") forState:UIControlStateNormal];
    [self.bottomView addSubview:self.shareButton];
    [self.shareButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(20, 19));
        make.centerY.equalTo(self.commentTextField);
        make.left.equalTo(self.collectionButton.mas_right).with.offset(20);
        make.right.equalTo(self.bottomView).with.offset(-20);
    }];
    
    
    self.commentBGView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, self.view.bounds.size.width, 140)];
    
    self.commentBGView.backgroundColor = BACKGROUNDCOKOR;
    
    self.comantTextView = [[UITextView alloc]init];
    
    self.comantTextView.layer.masksToBounds = YES;
    self.comantTextView.cornerRadius = 10;
    
    self.comment = [[UIButton alloc]init];
    
    self.comment.layer.masksToBounds = YES;
    self.comment.cornerRadius = 5;
    [self.comment setTitle:@"发表" forState:UIControlStateNormal];
    
    [self.comment setTitleColor:[UIColor lightGrayColor] forState:UIControlStateDisabled];
    [self.comment setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    
    [self.comment addTarget:self action:@selector(commentButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
    
    [self.commentBGView addSubview:self.comantTextView];
    [self.commentBGView addSubview:self.comment];
    
    [self.comantTextView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.edges.mas_offset(UIEdgeInsetsMake(10, 10, 40, 10));
    }];
    
    [self.comment mas_makeConstraints:^(MASConstraintMaker *make) {
        
        make.top.equalTo(self.comantTextView.mas_bottom).with.offset(10);
        make.bottom.equalTo(self.commentBGView).with.offset(-7);
        make.right.equalTo(self.commentBGView).with.offset(-7);
        make.width.mas_equalTo(50);
    }];
    
    
    self.commentTextField.inputAccessoryView = self.commentBGView;
    self.commentTextField.delegate = self;
    self.comantTextView.delegate = self;
    
    UITapGestureRecognizer *singleTap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(fingerTapped:)];
    
    [self.commentBigBGView addGestureRecognizer:singleTap];
    
    [self.collectionButton addTarget:self action:@selector(collectionButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
    
    [self.shareButton addTarget:self action:@selector(praiseTheComment:) forControlEvents:UIControlEventTouchUpInside];
    
}

#pragma mark - 下拉刷新
- (void)headerRefresh{
    
    [self loadData];
}

#pragma mark - 上拉加载
- (void)footerRefresh{
    
    [self loadData];
}

#pragma mark - 结束下拉刷新和上拉加载
- (void)endRefresh{
    
    //当请求数据成功或失败后，如果你导入的MJRefresh库是最新的库，就用下面的方法结束下拉刷新和上拉加载事件
    [self.webView.scrollView.mj_header endRefreshing];
    [self.webView.scrollView.mj_footer endRefreshing];
    
}


#pragma mark - 加载网页
- (void)loadData{
    
    NSString * urlString = [NSString stringWithFormat:@"http://test.cdtzb.com/portal.php?mod=view&aid=%ld&mobile=2&time=%u",(long)self.aid,arc4random()%1000];
    
    NSLog(@"%@",urlString);
    NSURL *url = [NSURL URLWithString:urlString];
    NSURLRequest *request = [NSURLRequest requestWithURL:url];
    [self.webView loadRequest:request];
}

#pragma mark - UIWebViewDelegate
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationTyp{
    
    return YES;
}
- (void)webViewDidStartLoad:(UIWebView *)webView{
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
}

- (void)webViewDidFinishLoad:(UIWebView *)webView{
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    
    [self endRefresh];
    
//    NSString *jsCode = [NSString stringWithFormat:@"$('')"];
//    [webView stringByEvaluatingJavaScriptFromString:jsCode];
    
}

- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error{
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    
    [self endRefresh];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark == textViewDelegate
- (BOOL)textViewShouldBeginEditing:(UITextView *)textView{
    
    return YES;
    
}

- (void)textViewDidBeginEditing:(UITextView *)textView{
    if (textView.text.length >= 1) {
        
        self.comment.enabled = YES;
        self.comment.backgroundColor = MAIN_COLOR;
        
    }else{
        
        self.comment.enabled = NO;
        self.comment.backgroundColor = COLOR(clearColor);
    }
    
    
}

- (void)textViewDidChange:(UITextView *)textView{
    
    if (textView.text.length >= 1) {
        
        self.comment.enabled = YES;
        self.comment.backgroundColor = MAIN_COLOR;
    }else{
        
        self.comment.enabled = NO;
        self.comment.backgroundColor = COLOR(clearColor);
    }
    
    
}

- (void)textViewDidEndEditing:(UITextView *)textView{
    
    [self hideCommentWindow];
}


#pragma mark -- 点击事件

- (void)fingerTapped:(UITapGestureRecognizer *)gestureRecognizer{
    
    [self.view endEditing:YES];
    
}

- (void)commentButtonOnTouched:(UIButton *)button{
    
    if (self.comantTextView.text.length >= 1) {
        NSMutableDictionary * mulParam = [NSMutableDictionary new];
        
        [mulParam setValue:[NSString stringWithFormat:@"%ld",(long)self.aid] forKey:@"aid"];
        [mulParam setValue:@"aid" forKey:@"idtype"];
        [mulParam setValue:self.comantTextView.text forKey:@"message"];
        
        [self commentPost:mulParam];
        
        [self.comantTextView setText:@""];
        
        [self.comantTextView resignFirstResponder];
        
    }
}

- (void)collectionButtonOnTouched:(UIButton *)button{
    
    if (button.selected == NO) {
        
        [self collectionTheArticle];
        
    }else if(button.selected == YES){
        
        [self cancelCollection];
        
    }
    button.selected = !button.selected;
    
}


- (void)praiseTheComment:(UIButton * )button{
    
    NSString * hashString = [NSString stringWithFormat:@"%ld%ld",(long)self.uid,(long)self.aid];
    
    NSString * hashedStr = [self stringToMD5:hashString];
    NSLog(@"加密的%@",hashedStr);
    [self praiseTheArticleToNet:hashedStr];
    
}

- (void)rightBarImageBtnClciked{
    
    NSLog(@"分享");
    
}

#pragma mark == 网络请求
- (void)commentPost:(NSDictionary *)params{
    
    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = CommentsPost;
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]post:url params:params success:^(id json) {
            
            [strongSelf.webView reload];
        } failure:^(NSError *error) {
            
        }];
    });
}

- (void)collectionTheArticle{
    
    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:CollectionTheArticle,(long)self.aid,(long)self.aid,arc4random()%1000];
    
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            NSDictionary * dic = json[@"data"];
            NSString * favaid = dic[@"favid"];
            NSString * code = json[@"code"];
            NSMutableDictionary * faDic = [ZHFactory readPlistWithPlistNameReturnMutableDictionary:isPraised];
            [faDic setValue:favaid forKey:[NSString stringWithFormat:@"%ld",self.aid]];
            if (code.integerValue == 1) {
                [self plistHuanCunWithDic:faDic];
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (code.integerValue == 100){
                
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"请勿重复收藏!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                
            }
            
        } failure:^(NSError *error) {
            
            
        }];
        
    });
    
    
}

- (void)cancelCollection{
    
    NSMutableDictionary * dic = [ZHFactory readPlistWithPlistNameReturnMutableDictionary:isPraised];
    NSString * favid = dic[[NSString stringWithFormat:@"%ld",self.aid]];
    self.favid = favid.integerValue;
    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:CancelCollection,(long)self.favid,arc4random()%1000];
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            NSString * code = json[@"code"];
            if (code.integerValue == 2) {
                [dic removeObjectForKey:[NSString stringWithFormat:@"%ld",self.aid]];
                [self plistHuanCunWithDic:dic];
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏删除成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (code.integerValue == 101){
                
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏不存在!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                
            }
            
        } failure:^(NSError *error) {
            
            
        }];
    });
}

- (void)praiseTheArticleToNet:(NSString *)str{

    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:PraiseArticle,(long)self.aid,str,arc4random()%1000];
    
    NSLog(@"点赞地址%@",url);
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            
            NSString * str = json[@"code"];
            
            if (str.integerValue == 1) {
        
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"点赞成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (str.integerValue == 405){
            
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"您已点过赞!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            
            
            }
            
           
            
        } failure:^(NSError *error) {
            
            
        }];
    });
}

#pragma mark -- 键盘出现消失
- (void)keyboardWillShow:(NSNotification *)notification {
    
    [UIView animateWithDuration:0.25 animations:^{
        
        self.commentBigBGView.alpha = 0.5;
        [self.view bringSubviewToFront:self.commentBigBGView];
        
    }];
    
    [self.comantTextView becomeFirstResponder];
    
}


- (void)hideCommentWindow{
    
    [UIView animateWithDuration:0.2 animations:^{
        
        [self.view sendSubviewToBack:self.commentBigBGView];
        
    }];
    
}

#pragma mark -- MD5加密
- (NSString *)stringToMD5:(NSString *)str{
    const char *fooData = [str UTF8String];
  
    unsigned char result[CC_MD5_DIGEST_LENGTH];

    CC_MD5(fooData, (CC_LONG)strlen(fooData), result);

    NSMutableString *saveResult = [NSMutableString string];
   
    for (int i = 0; i < CC_MD5_DIGEST_LENGTH; i++) {
        [saveResult appendFormat:@"%02x", result[i]];
    }
    return saveResult;
}

#pragma mark- plist缓存
- (void) plistHuanCunWithDic:(NSDictionary *) dic {
    
    NSArray *path = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsPath = [path objectAtIndex:0];
    NSString *plistPath = [documentsPath stringByAppendingPathComponent:isPraised];
    [dic writeToFile:plistPath atomically:YES];
}


- (void)dealloc{
    
    [[NSNotificationCenter defaultCenter] removeObserver:self name:nil object:nil];
    
}
@end
