//
//  HeadLineViewController.m
//  HDGolden
//
//  Created by hd-app02 on 16/10/13.
//  Copyright © 2016年 hd-app02. All rights reserved.
//

#import "HeadLineViewController.h"
#import <WebKit/WebKit.h>
#import "AppDelegate.h"
#import <CommonCrypto/CommonDigest.h>
#import "ZHFactory.h"

static NSString * const isPraised = @"isPraised.plist";
@interface HeadLineViewController ()<WKUIDelegate, WKNavigationDelegate, UIWebViewDelegate>

@property (nonatomic,strong) UIView * shareBlakBgView;//分享时候的黑色遮罩视图
@property (nonatomic,strong) UIView * shareBgView;//分享背景视图
@property (nonatomic,copy) NSArray * shareTitleArr;//分享标题
@property (nonatomic,copy) NSArray * shareIconArr;//分享图片

@property (strong, nonatomic) UIView * bottomView;
@property (strong, nonatomic) UIButton *collectionButton;
@property (strong, nonatomic) UIButton *shareButton;
@property (strong, nonatomic) UIButton *praiseButton;
@property (assign, nonatomic) NSInteger favid;
@property (nonatomic, copy) NSString * token;

@property (nonatomic, strong) UIWebView * webView;//网页>

@end

@implementation HeadLineViewController{

    AppDelegate * _appDelegate;

}

- (UIView *)shareBlakBgView {
    if (!_shareBlakBgView) {
        _shareBlakBgView = [[UIView alloc] initWithFrame:CGRM(0, 0, SCREEN_SIZE_WIDTH, SCREEN_SIZE_HEIGHT)];
        _shareBlakBgView.backgroundColor = UICOLOR(28, 28, 28, 1);
        _shareBlakBgView.alpha = 0.5;
        
        UITapGestureRecognizer * tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(shareBlakBgViewTapEvent:)];
        [_shareBlakBgView addGestureRecognizer:tap];
    }
    return _shareBlakBgView;
}
- (NSArray *)shareIconArr {
    if (!_shareIconArr) {
        _shareIconArr = @[imageNamed(@"share_weixin"),imageNamed(@"share_friendCircle"),imageNamed(@"share_weibo"),imageNamed(@"share_QQ")];
    }
    return _shareIconArr;
}
- (NSArray *)shareTitleArr {
    if (!_shareTitleArr) {
        _shareTitleArr = @[@"微信好友",@"微信朋友圈",@"新浪微博",@"QQ"];
    }
    return _shareTitleArr;
}
- (UIView *)shareBgView {
    if (!_shareBgView) {
        _shareBgView = [[UIView alloc] initWithFrame:CGRM(0, 0, SCREEN_SIZE_WIDTH, 73)];
        _shareBgView.backgroundColor = COLOR(whiteColor);
        
        for (int i = 0; i < self.shareTitleArr.count; i++) {
            //icon
            UIImageView * shareIMV = [[UIImageView alloc] init];
            shareIMV.image = self.shareIconArr[i];
            shareIMV.tag = 920+i;
            [_shareBgView addSubview:shareIMV];
            //title
            UILabel * title = [ZHFactory createLabelWithFrame:CGRectZero andFont:systemFont(9) andTitleColor:TEXT_COLOR title:self.shareTitleArr[i]];
            title.tag = 940+i;
            title.textAlignment = NSTextAlignmentCenter;
            [_shareBgView addSubview:title];
            
            if (i > 0) {
                UIView * lineView = [UIView new];
                lineView.backgroundColor = LINE_COLOR;
                lineView.tag = 960+i;
                [_shareBgView addSubview:lineView];
            }
            
            UIButton * shareBtn = [UIButton buttonWithType:(UIButtonTypeCustom)];
            shareBtn.tag = 900+i;
            [shareBtn addTarget:self action:@selector(shareBtnClicked:) forControlEvents:(UIControlEventTouchUpInside)];
            [_shareBgView addSubview:shareBtn];
            
        }
        
        [self adjustShareBgViewFrame];
    }
    return _shareBgView;
}

- (void) adjustShareBgViewFrame {
    
    CGFloat shuxianWidth = 1;
    CGFloat sectionWidth = (SCREEN_SIZE_WIDTH-shuxianWidth*(self.shareTitleArr.count-1))/self.shareTitleArr.count;
    CGFloat iconIMVHeight = 24.0;//分享图标高度
    
    self.shareBlakBgView.frame = CGRM(0, 0, SCREEN_SIZE_WIDTH, SCREEN_SIZE_HEIGHT);
    _shareBgView.frame = CGRM(0, SCREEN_HEIGHT-73, SCREEN_SIZE_WIDTH, 73);
    
    for (int i = 0; i < self.shareTitleArr.count; i++) {
        CGFloat iconIMVWidth = 30.0;//分享图标宽度
        if (i == 1) {
            iconIMVWidth = 25.0;
        }else if (i== 3) {
            iconIMVWidth = 23.0;
        }
        
        UIImageView * imv = (UIImageView*)[_shareBgView viewWithTag:920+i];
        imv.frame = CGRM((sectionWidth+shuxianWidth)*i+(sectionWidth/2.0-iconIMVWidth/2.0), self.shareBgView.height/2-iconIMVWidth*2/3, i == 3? 23:iconIMVWidth, iconIMVHeight);
        
        UILabel * thyTitle = (UILabel*)[_shareBgView viewWithTag:940+i];
        thyTitle.frame = CGRM((sectionWidth+shuxianWidth)*i, CGMAX_Y(imv.frame)+10, sectionWidth, 10);
        
        UIView * lineview = (UIView*)[_shareBgView viewWithTag:960+i];
        lineview.frame = CGRM(sectionWidth*i, CGMIN_Y(imv.frame), shuxianWidth, CGMAX_Y(thyTitle.frame)-CGMIN_Y(imv.frame));
        
        UIButton * btn = (UIButton*)[_shareBgView viewWithTag:900+i];
        btn.frame = CGRM((sectionWidth+shuxianWidth)*i, 0, sectionWidth, self.shareBgView.height);
    }
}


- (void)viewDidLoad{

    [super viewDidLoad];
    _appDelegate = (AppDelegate *)[UIApplication sharedApplication].delegate;
    self.title = @"资讯";
    [self setNormalBackNav];
    [self setUpTextView];
    [self loadData];
    NSDictionary *dicd = [[LYCUserManager informationDefaultUser] getUserInfoDic];
    self.token = dicd[@"token"];
    
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    [self.navigationController.navigationBar setHidden:NO];
    [self.tabBarController.tabBar setHidden:YES];
}

- (void)viewDidDisappear:(BOOL)animated{
    [super viewDidDisappear:animated];
    [self.tabBarController.tabBar setHidden:NO];
    
    [self.navigationController.navigationBar setHidden:YES];
    
}


- (void)setUpTextView{
    self.webView = [[UIWebView alloc] initWithFrame: CGRectMake(0, 0, self.view.bounds.size.width, self.view.bounds.size.height - NAV_STATUS_HEIGHT - 50)];
    self.webView.backgroundColor = [UIColor whiteColor];
    self.webView.opaque = NO;
    self.webView.delegate = self;
    
    //如果你导入的MJRefresh库是最新的库，就用下面的方法创建下拉刷新和上拉加载事件
    self.webView.scrollView.mj_header = [MJRefreshNormalHeader headerWithRefreshingTarget:self refreshingAction:@selector(headerRefresh)];
    self.webView.scrollView.mj_footer = [MJRefreshBackNormalFooter footerWithRefreshingTarget:self refreshingAction:@selector(footerRefresh)];
    [self.view addSubview:self.webView];
    
    self.bottomView = [[UIView alloc]initWithFrame:CGRectZero];
    self.bottomView.backgroundColor = COLOR(whiteColor);
    [self.view addSubview:self.bottomView];
    [self.bottomView mas_makeConstraints:^(MASConstraintMaker *make) {
       
        make.bottom.right.left.equalTo(self.view);
        make.height.mas_equalTo(50);
    }];
    
    self.collectionButton = [[UIButton alloc]init];
    [self.collectionButton setBackgroundImage:imageNamed(@"zixun_soucang_icon_weixuanzhong") forState:UIControlStateNormal];
    [self.collectionButton setBackgroundImage:imageNamed(@"zixun_soucang_icon_xuanzhong") forState:UIControlStateSelected];
    [self.bottomView addSubview:self.collectionButton];
    [self.collectionButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(34, 34));
        make.center.equalTo(self.bottomView);
        
    }];
    
    self.praiseButton = [[UIButton alloc]initWithFrame:CGRectZero];
    [self.praiseButton setBackgroundImage:imageNamed(@"zixun_zan_icon_weixuanzhong") forState:UIControlStateNormal];
    [self.praiseButton setBackgroundImage:imageNamed(@"zixun_zan_icon_xuanzhong") forState:UIControlStateDisabled];
    [self.bottomView addSubview:self.praiseButton];
    [self.praiseButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(34, 34));
        make.centerY.equalTo(self.bottomView);
        make.right.equalTo(self.collectionButton.mas_left).with.offset(-74);
        
    }];
    
    self.shareButton = [[UIButton alloc]init];
    [self.shareButton setBackgroundImage:imageNamed(@"zixun_share_icon") forState:UIControlStateNormal];
    [self.bottomView addSubview:self.shareButton];
    [self.shareButton mas_makeConstraints:^(MASConstraintMaker *make) {
        make.size.mas_equalTo(CGSizeMake(34, 34));
        make.centerY.equalTo(self.bottomView);
        make.left.equalTo(self.collectionButton.mas_right).with.offset(74);
    }];
    
    [self.collectionButton addTarget:self action:@selector(collectionButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
    
    [self.shareButton addTarget:self action:@selector(shareButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
    
    [self.praiseButton addTarget:self action:@selector(praiseButtonOnTouched:) forControlEvents:UIControlEventTouchUpInside];
}

#pragma mark - 下拉刷新
- (void)headerRefresh{
    
    [self loadData];
}

#pragma mark - 上拉加载
- (void)footerRefresh{
    
    [self loadData];
}

#pragma mark - 结束下拉刷新和上拉加载
- (void)endRefresh{
    
    //当请求数据成功或失败后，如果你导入的MJRefresh库是最新的库，就用下面的方法结束下拉刷新和上拉加载事件
    [self.webView.scrollView.mj_header endRefreshing];
    [self.webView.scrollView.mj_footer endRefreshing];
    
}


#pragma mark - 加载网页
- (void)loadData{
    
    NSString * urlString = [NSString stringWithFormat:@"http://test.cdtzb.com/portal.php?mod=view&aid=%ld&mobile=2&time=%u",(long)self.aid,arc4random()%1000];
    
    NSLog(@"%@",urlString);
    NSURL *url = [NSURL URLWithString:urlString];
    NSURLRequest *request = [NSURLRequest requestWithURL:url];
    [self.webView loadRequest:request];
}

#pragma mark - UIWebViewDelegate
- (BOOL)webView:(UIWebView *)webView shouldStartLoadWithRequest:(NSURLRequest*)request navigationType:(UIWebViewNavigationType)navigationTyp{
    
    return YES;
}
- (void)webViewDidStartLoad:(UIWebView *)webView{
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
}

- (void)webViewDidFinishLoad:(UIWebView *)webView{
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    
    [self endRefresh];
    
//    NSString *jsCode = [NSString stringWithFormat:@"$('')"];
//    [webView stringByEvaluatingJavaScriptFromString:jsCode];
    
}

- (void)webView:(UIWebView *)webView didFailLoadWithError:(NSError *)error{
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    
    [self endRefresh];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark == 点击事件

- (void)collectionButtonOnTouched:(UIButton *)button{
    
    if (self.token) {
        if (button.selected == NO) {
            
            [self collectionTheArticle];
            
        }else if(button.selected == YES){
            
            [self cancelCollection];
            
        }
        button.selected = !button.selected;
    }else{
    
        PCSignInViewController * signVC = [[PCSignInViewController alloc]init];
        //[self.navigationController pushViewController:signVC animated:YES];
    
        [self presentViewController:signVC animated:YES completion:^{
            
            
        }];
    }
    
}


- (void)praiseButtonOnTouched:(UIButton * )button{
    
    NSString * hashString = [NSString stringWithFormat:@"%ld%ld",(long)self.uid,(long)self.aid];
    
    NSString * hashedStr = [self stringToMD5:hashString];
    NSLog(@"加密的%@",hashedStr);
    [self praiseTheArticleToNet:hashedStr];
    
}

- (void)shareButtonOnTouched:(UIButton *)button{
    
    [_appDelegate.window addSubview:self.shareBlakBgView];
    [_appDelegate.window addSubview:self.shareBgView];
    [self adjustShareBgViewFrame];
    
}

- (void) shareBlakBgViewTapEvent:(UITapGestureRecognizer*)tap {
    
    [self.shareBlakBgView removeFromSuperview];
    [self.shareBgView removeFromSuperview];
    
}

- (void) shareBtnClicked:(UIButton*)sender {//900+3
    
}


#pragma mark == 网络请求
- (void)collectionTheArticle{
    
    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:CollectionTheArticle,(long)self.aid,(long)self.aid,self.token,arc4random()%1000];
    NSLog(@"收藏%@",url);
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            
            NSArray * array = json[@"data"];
            
            NSMutableDictionary * faDic = [ZHFactory readPlistWithPlistNameReturnMutableDictionary:isPraised];
            NSLog(@"读取%@",faDic);
            if (!faDic) {
                
                faDic = [NSMutableDictionary dictionary];
                
            }
            if (array.count != 0) {
                NSLog(@"条件为真");
                NSDictionary * dic = [array objectAtIndexCheck:0];
                NSString * favaid = dic[@"favid"];
                [faDic setValue:favaid forKey:[NSString stringWithFormat:@"%ld",self.aid]];
            }
            
            NSString * code = json[@"code"];
            
            if (code.integerValue == 1) {
                NSLog(@"写入%@",faDic);
                [self plistHuanCunWithDic:faDic];
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (code.integerValue == 100){
                
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"请勿重复收藏!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                
            }
            
        } failure:^(NSError *error) {
            
            
        }];
        
    });
    
    
}

- (void)cancelCollection{
    
    NSMutableDictionary * dic = [ZHFactory readPlistWithPlistNameReturnMutableDictionary:isPraised];
    NSString * favid = dic[[NSString stringWithFormat:@"%ld",self.aid]];
    self.favid = favid.integerValue;
    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:CancelCollection,(long)self.favid,self.token,arc4random()%1000];
        NSLog(@"删除收藏%@",url);
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            NSString * code = json[@"code"];
            if (code.integerValue == 2) {
                [dic removeObjectForKey:[NSString stringWithFormat:@"%ld",self.aid]];
                [self plistHuanCunWithDic:dic];
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏删除成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            }else if (code.integerValue == 101){
                
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"收藏不存在!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                
            }
            
        } failure:^(NSError *error) {
            
            
        }];
    });
}

- (void)praiseTheArticleToNet:(NSString *)str{

    WEAK_SELF;
    
    dispatch_queue_t queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);
    
    NSString * url = [NSString stringWithFormat:PraiseArticle,(long)self.aid,str,arc4random()%1000];
    
    NSLog(@"点赞地址%@",url);
    dispatch_async(queue, ^{
        
        STRONG_SELF;
        
        [[CDAFNetWork sharedMyManager]get:url params:nil success:^(id json) {
            
            NSString * str = json[@"code"];
            
            if (str.integerValue == 1) {
        
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"点赞成功!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
                
                self.praiseButton.enabled = NO;
                
            }else if (str.integerValue == 405){
            
                MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:strongSelf.view animated:YES];
                hud.mode = MBProgressHUDModeText;
                hud.label.text = @"您已点过赞!";
                hud.label.textColor = COLOR(orangeColor);
                [hud hideAnimated:YES afterDelay: 2];
            
                self.praiseButton.enabled = NO;
            
            }
            
           
            
        } failure:^(NSError *error) {
            
            
        }];
    });
}

#pragma mark -- 键盘出现消失

#pragma mark -- MD5加密
- (NSString *)stringToMD5:(NSString *)str{
    const char *fooData = [str UTF8String];
  
    unsigned char result[CC_MD5_DIGEST_LENGTH];

    CC_MD5(fooData, (CC_LONG)strlen(fooData), result);

    NSMutableString *saveResult = [NSMutableString string];
   
    for (int i = 0; i < CC_MD5_DIGEST_LENGTH; i++) {
        [saveResult appendFormat:@"%02x", result[i]];
    }
    return saveResult;
}

#pragma mark- plist缓存
- (void) plistHuanCunWithDic:(NSDictionary *) dic {
    
    NSArray *path = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsPath = [path objectAtIndex:0];
    NSString *plistPath = [documentsPath stringByAppendingPathComponent:isPraised];
    [dic writeToFile:plistPath atomically:YES];
}

@end
